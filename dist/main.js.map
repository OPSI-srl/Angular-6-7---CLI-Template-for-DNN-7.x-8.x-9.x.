{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/Models/filterGrid.ts","webpack:///./src/Service/staging.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/input-nav/input-nav.component.css","webpack:///./src/app/input-nav/input-nav.component.html","webpack:///./src/app/input-nav/input-nav.component.ts","webpack:///./src/app/input-table/input-table.component.css","webpack:///./src/app/input-table/input-table.component.html","webpack:///./src/app/input-table/input-table.component.ts","webpack:///./src/app/material.ts","webpack:///./src/app/output-nav/output-nav.component.css","webpack:///./src/app/output-nav/output-nav.component.html","webpack:///./src/app/output-nav/output-nav.component.ts","webpack:///./src/app/output-table/output-table.component.css","webpack:///./src/app/output-table/output-table.component.html","webpack:///./src/app/output-table/output-table.component.ts","webpack:///./src/app/transaction-nav/transaction-nav.component.css","webpack:///./src/app/transaction-nav/transaction-nav.component.html","webpack:///./src/app/transaction-nav/transaction-nav.component.ts","webpack:///./src/app/transaction-table/pipeInfoImage.ts","webpack:///./src/app/transaction-table/pipeTruncate.ts","webpack:///./src/app/transaction-table/transaction-table.component.css","webpack:///./src/app/transaction-table/transaction-table.component.html","webpack:///./src/app/transaction-table/transaction-table.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/http/interceptor.ts","webpack:///./src/main.ts","webpack:///./src/service/context.service.ts","webpack:///./src/service/dev-context.ts","webpack:///./src/service/dnncontext.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class filterGrid{\r\n    pickerStartFrom: Date = new Date(new Date().getFullYear(), new Date().getMonth() - 1);\r\n    pickerStartTo: Date = new Date();\r\n    systemCodeSelected: {key: any, value: any} = {key: -1,value:222};\r\n    statusIdSelected: {key: any, value: any} = {key: -1,value:222};\r\n}","import { Injectable } from '@angular/core';\nimport { DnnContextService } from './dnncontext.service';\nimport { Observable } from 'rxjs';\nimport { systemCode } from '../Models/systemCode.interface';\nimport { statusError } from '../Models/statusError.interface';\nimport { ITransaction } from '../Models/transaction.interface';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StagingService {\n  private _urlBase: string;\n\n  constructor(private http: HttpClient) {   \n    this._urlBase = \"/DesktopModules/Rainbow_Staging/API/\"\n  }\n\n  //DNN DNN\n  // constructor(private http: HttpClient, private ctx: DnnContextService) { \n  //   this._urlBase = this.ctx.properties.ModuleDirectory + 'API/item/';\n  // }\n\n  public getSystemCodeList(): systemCode[] { //Observable<systemCode[]>\n    let systemCode: systemCode[];\n    // let webAPIRouting: string = \"System/list\" \n\n    // let getUrl = this._urlBase \n    // return this.http.get<any>(getUrl)\n\n    systemCode = [{\n      id: '0',\n      value: \"Navision (SLO)\"\n    },\n    {\n      id: '1',\n      value: \"Customer Email\"\n    },\n    {\n      id: '2',\n      value: \"SOL Documents\"\n    },\n    {\n      id: '3',\n      value: \"E-commerce Hybris\"\n    }];\n\n    systemCode.unshift({ id: '-1', value: 'All system code' });\n    //return this.http.get<Item[]>(this._urlBase + 'test');\n    return systemCode;\n  }\n\n\n  public getErrorCodeList(): statusError[] {\n    let _statusError: statusError[];\n\n    _statusError = [{\n      id: '0',\n      value: '12321'\n    },\n    {\n      id: '1',\n      value: '456456'\n    },\n    {\n      id: '2',\n      value: '768978'\n    }];\n    _statusError.unshift({ id: '-1', value: 'All status ID' });\n\n    return _statusError;\n  }\n\n  public getTrasactionList(dateStart?: any, dateEnd?: any, statusId?: any, systemCode?: any): Observable<any> {\n    //http://rainbow.xx/DesktopModules/Rainbow_Staging/API/TransactionLog/list?dateEnd=2018-08-18T13:20:56.231Z&dateStart=2018-04-30T22:00:00.000Z\n    if (dateStart == undefined) dateStart = '2018-04-30';\n    if (dateEnd == undefined) dateEnd = '2018-08-18';\n    if (statusId == undefined) statusId = '';\n    if (systemCode == undefined) systemCode = '';\n\n    let webAPIName = \"TransactionLog/list\";\n    let getUrl = this._urlBase + webAPIName + \"?dateEnd=\" + dateEnd + \"&dateStart=\"+ dateStart + \"&systemCode=\" + systemCode + \"&statusID=\" + statusId;\n    console.log('​---------------------------------');\n    console.log('​StagingService -> getUrl', getUrl);\n    console.log('​---------------------------------');\n    return this.http.get<any>(getUrl)\n  }\n\n  public getStagingOutputList(): Observable<any> {\n    let webAPIName = \"DataOutput/list\";\n    let getUrl = this._urlBase + webAPIName;\n    console.log('​---------------------------------');\n    console.log('​StagingService -> getUrl', getUrl);\n    console.log('​---------------------------------');\n    return this.http.get<any>(getUrl)\n  }\n}\n","module.exports = \".example-icon {\\r\\n  padding: 0 14px;\\r\\n}\\r\\n\\r\\n.example-spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  max-width: 100%;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <span>\\n        <!-- <a mat-flat-button [matMenuTriggerFor]=\\\"menu\\\">Menu</a>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n              <a mat-menu-item routerLink=\\\"\\\">Transaction</a>\\n              <a mat-menu-item routerLink=\\\"/output\\\">Output</a>\\n              <a mat-menu-item routerLink=\\\"/input\\\">Input</a>\\n            </mat-menu> \\n       <button mat-raised-button\\n        matTooltip=\\\"Info about the action\\\"\\n        aria-label=\\\"Button that displays a tooltip when focused or hovered over\\\">\\n  Action\\n</button>   \\n          -->\\n        <mat-tab-group [selectedIndex]=\\\"selectedIndex\\\" dynamicHeight=\\\"true\\\">\\n          <mat-tab label=\\\"Transaction\\\">\\n            <app-nav-filter></app-nav-filter>\\n          </mat-tab>\\n          <mat-tab label=\\\"Staging Output\\\">\\n            <app-output-nav></app-output-nav>\\n          </mat-tab>\\n          <mat-tab label=\\\"Staging Input\\\">\\n            <app-input-nav></app-input-nav>\\n          </mat-tab>\\n        </mat-tab-group>\\n      </span>\\n      <!-- <router-outlet></router-outlet> -->\\n    </div>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { DnnContextService } from '../service/dnncontext.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-root-md',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngolarNG6-Material Design';\n  moduleID: number;\n  selectedIndex: number = 0;\n  // myDnnContextService: DnnContextService;\n\n  constructor(private contextService: DnnContextService, public snackBar: MatSnackBar) {\n    this.moduleID = this.contextService.properties.ModuleId;\n    console.log('​------------------------------------------------------------');\n    console.log('​AppComponent -> constructor -> this.moduleID', this.moduleID);\n    console.log('​------------------------------------------------------------');\n    \n    if (this.moduleID == null) {\n      this.openSnackBar(\"Starting up\", \"WARNING NOT CONNECTION WITH DNN\");\n    } else {\n      this.openSnackBar(\"CONTEXT DNN\", \"moduleID:\" + this.moduleID);\n    }\n\n\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngOnInit(): void {\n  }\n\n  \n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewInit() {\n    //this.selectedIndex = 2;\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 4000,\n      horizontalPosition: 'right'\n    });\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n//ADD for webapi DNN\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { DnnInterceptor } from '../http/DnnInterceptor';\nimport { Interceptor } from '../http/interceptor';\nimport { DnnContextService } from '../service/dnncontext.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n//other\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { MaterialModule } from './material';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { GridFilterComponent } from './transaction-nav/transaction-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatTableModule, MatPaginatorModule, MatSortModule } from '@angular/material';\nimport { StagingService } from '../Service/staging.service';\nimport { TableTransactionComponent } from './transaction-table/transaction-table.component';\nimport { TruncatePipe } from './transaction-table/pipeTruncate';\nimport { infoImagePipe } from './transaction-table/pipeInfoImage';\nimport { InputNavComponent } from './input-nav/input-nav.component';\nimport { InputTableComponent } from './input-table/input-table.component';\nimport { OutputTableComponent } from './output-table/output-table.component';\nimport { OutputNavComponent } from './output-nav/output-nav.component';\nimport { Context } from '../service/context.service';\n\n\nconst routes: Routes = [\n  { path: '', component: AppComponent },\n  { path: 'input', component: InputNavComponent },\n  { path: 'output', component: OutputNavComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GridFilterComponent,\n    TableTransactionComponent,\n    TruncatePipe,\n    infoImagePipe,\n    InputNavComponent,\n    InputTableComponent,\n    OutputTableComponent,\n    OutputNavComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    FormsModule,\n    HttpClientModule, // important - this changed in Angular 4.3    \n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    NgbModule.forRoot(),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule\n  ],\n  providers: [\n    DnnContextService,\n    Context,\n    {\n      provide: HTTP_INTERCEPTORS,\n      // useClass: DnnInterceptor,\n      useClass: Interceptor,\n      multi: true\n    },\n    StagingService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n      <span>Input</span>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input-nav',\n  templateUrl: './input-nav.component.html',\n  styleUrls: ['./input-nav.component.css']\n})\nexport class InputNavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    \n    console.log('​------------------------------------');\n    console.log('​InputNavComponent -> ngOnInit -> ', 'aaaaaaaaaaaaaaaaaaa');\n    console.log('​------------------------------------');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  input-table works!\\n</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-input-table',\n  templateUrl: './input-table.component.html',\n  styleUrls: ['./input-table.component.css']\n})\nexport class InputTableComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { MatButtonModule, MatNativeDateModule } from '@angular/material';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSidenavModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatMenuModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatDialogModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatListModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSidenavModule,\r\n    MatCardModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSnackBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatMenuModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatDialogModule\r\n  ],\r\n})\r\nexport class MaterialModule { }","module.exports = \"\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <span>Output</span>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<app-output-table></app-output-table>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-output-nav',\n  templateUrl: './output-nav.component.html',\n  styleUrls: ['./output-nav.component.css']\n})\nexport class OutputNavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    console.log('​------------------------------------');\n    console.log('​InputNavComponent -> ngOnInit -> ', 'output-nav');\n    console.log('​------------------------------------');\n \n  }\n\n}\n","module.exports = \".container {\\r\\n    max-width: 100%;\\r\\n  }\\r\\n  \\r\\ntable {\\r\\n    width: 100%;\\r\\n}\\r\\n  \\r\\ntr.mat-row.ng-star-inserted:hover {\\r\\n    background: #e2e2e2;\\r\\n  }\\r\\n  \\r\\n.filterSearch{\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\">\\n            <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"pickerFrom\\\" [(ngModel)]=\\\"_filterGrid.pickerStartFrom\\\" placeholder=\\\"Choose Date From\\\" required\\n                    readonly>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"pickerFrom\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #pickerFrom [startAt]=\\\"pickerStartFrom\\\"></mat-datepicker>\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"col-3\\\">\\n            <mat-form-field>\\n                <input matInput [matDatepicker]=\\\"pickerTo\\\" [(ngModel)]=\\\"_filterGrid.pickerStartTo\\\" placeholder=\\\"Choose Date To\\\" required\\n                    readonly>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"pickerTo\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #pickerTo [startAt]=\\\"pickerStartTo\\\"></mat-datepicker>\\n            </mat-form-field>\\n        </div>\\n        <div class=\\\"col-3\\\">\\n            <mat-form-field>\\n                <mat-select placeholder=\\\"System code\\\" [(ngModel)]=\\\"_filterGrid.systemCodeSelected.key\\\" name=\\\"systemCode\\\">\\n                    <mat-option *ngFor=\\\"let item of systemCode\\\" [value]=\\\"item.id\\\">\\n                        {{item.value}}\\n                    </mat-option>\\n                </mat-select>\\n            </mat-form-field>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <mat-form-field class=\\\"filterSearch\\\">\\n                <input maxlength=\\\"50\\\" matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter by (System Code, Tra. Guid, data)\\\">\\n            </mat-form-field>\\n        </div>\\n    </div>\\n</div>\\n<div class=\\\"mat-elevation-z8\\\">\\n    <mat-paginator #paginator [length]=\\\"dataSource.data.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 25, 50, 100, 250]\\\">\\n    </mat-paginator>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoadingResults\\\">\\n            <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\n        </div>\\n\\n        <table mat-table #table [trackBy]=\\\"trackByIndex\\\" [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n            <!-- Id Column -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"systemcode\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>System Code</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.systemcode}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"transactionlogid\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>T. Log Id</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.transactionlogid}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"transactionguid\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>T. Guid</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.transactionguid}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"transactioniddate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>T. Date</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.transactioniddate | date:\\\"MM/dd/yyyy hh:mm\\\"}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"primarykey\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>primary key</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.primarykey}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"datatypeid\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>datatypeid</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.datatypeid}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"primarykeydate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>P. key Date</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.primarykeydate}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"data\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>data</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\" matTooltip=\\\"{{row.data}}\\\" >{{row.data | truncate:[10, '...']}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"methodid\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>method id</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.methodid}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"statusid\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>statusid</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.statusid}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"insertdate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Insert Date</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.insertdate | date:\\\"MM/dd/yyyy hh:mm\\\"}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"senddate\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Send Date</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.senddate | date:\\\"MM/dd/yyyy hh:mm\\\"}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"errormessage\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Err. Message</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.errormessage | truncate:[10, '...']}}</td>\\n            </ng-container>\\n\\n            <!-- Column -->\\n            <ng-container matColumnDef=\\\"errorcode\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Err. Code</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.errorcode}}</td>\\n            </ng-container>\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n\\n        <!-- <mat-paginator #paginator [length]=\\\"dataSource.data.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 25, 50, 100, 250]\\\">\\n    </mat-paginator> -->\\n    </div>\\n\\n</div>\"","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { StagingService } from '../../Service/staging.service';\nimport { MatTableDataSource, MatSnackBar, MatPaginator, MatSort } from '@angular/material';\nimport { IStagingOutput } from '../../Models/IStagingOutput.interface';\nimport { Subject } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { filterGrid } from '../../Models/filterGrid';\nimport { systemCode } from '../../Models/systemCode.interface';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { GridFilterComponent } from '../transaction-nav/transaction-nav.component';\n\n@Component({\n  selector: 'app-output-table',\n  templateUrl: './output-table.component.html',\n  styleUrls: ['./output-table.component.css']\n})\nexport class OutputTableComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  pageSize = 50;\n  dataSource: MatTableDataSource<IStagingOutput>;\n  parentSubject: Subject<any>;\n  isLoadingResults = false;\n  stagingOutputList: IStagingOutput[];\n  _filterGrid: filterGrid = new filterGrid();\n  systemCode: systemCode[];\n\n  displayedColumns: string[] = [\n    'id',\n    'systemcode',\n    'transactionlogid',\n    'transactionguid',\n    'transactioniddate',\n    'datatypeid',\n    'primarykey',\n    'primarykeydate',\n    'data',\n    'methodid',\n    'statusid',\n    'insertdate',\n    'senddate',\n    'errormessage',\n    'errorcode'\n  ];\n\n  constructor(private _stagingService: StagingService, public snackBar: MatSnackBar, public dialog: MatDialog) { }\n\n  ngOnInit() {\n\n    this.getStagingOutput();\n    this.resetFilters();\n    this.systemCode = this._stagingService.getSystemCodeList();\n\n    this.dataSource = new MatTableDataSource(this.stagingOutputList);\n    this.paginator.pageSize = 50;\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n\n  private getStagingOutput() {\n    this._stagingService.getStagingOutputList().subscribe(data => {\n      var obj = JSON.parse(data, function (key, value) {\n        //PARSE HERE SPECIAL DATA\n        if (key == \"transactionguid\" && value == null) {\n          return('--')\n          // return new Date(value);\n        } else {\n          //return value;\n        }    \n        return (value == null && typeof(value) == 'string' ? '-' : value);\n      });\n\n      this.dataSource = new MatTableDataSource(<IStagingOutput[]>obj);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.isLoadingResults = false;\n    },\n      (err: HttpErrorResponse) => {\n        if (err.error instanceof Error) {\n          this.openSnackBar('Message error', 'ERROR data received form server: ' + err.status);\n        } else {\n          this.openSnackBar('Message error', 'ERROR receiving data form server: ' + err.status);\n        }\n        this.isLoadingResults = false;\n      }\n    );\n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 4000,\n    });\n  }\n\n  PageEvent() {\n\n    console.log('​----------------------------------------');\n    console.log('​OutputTableComponent -> PageEvent -> ', 'ok');\n    console.log('​----------------------------------------');\n  }\n\n  private resetFilters() {\n    this._filterGrid.pickerStartFrom = new Date(new Date().getFullYear(), new Date().getMonth() - 1);\n    this._filterGrid.pickerStartTo = new Date();\n    this._filterGrid.statusIdSelected.key = '-1';\n    this._filterGrid.statusIdSelected.value = 'all';\n    this._filterGrid.systemCodeSelected.value = 'all';\n    this._filterGrid.systemCodeSelected.key = '-1';\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    console.log('TCL: --------------------------------------------------------------------------------------------------------------');\n    console.log('TCL: OutputTableComponent -> applyFilter -> filterValue.trim().toLowerCase()', filterValue.trim().toLowerCase());\n    console.log('TCL: --------------------------------------------------------------------------------------------------------------');\n    this.dataSource.filterPredicate = (data: IStagingOutput, filter: string) => {\n      return (\n        data.systemcode.trim().toLowerCase().indexOf(filter.trim().toLowerCase()) != -1\n        ||\n        data.data.trim().toLowerCase().indexOf(filter.trim().toLowerCase()) != -1\n        ||\n        data.transactionguid.trim().toLowerCase().indexOf(filter.trim().toLowerCase()) != -1\n      );\n    }\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 300px;\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n}\\n\\n.mat-sidenav-fixed{\\n  position: absolute;\\n  background-color: #dfdfdf;\\n}\\n\\n@media(min-width: 10px){\\n  /* .sidenav{\\n    display: none;\\n  } */\\n}\\n\\n.mat-list{\\n  text-align: center;\\n}\\n\\n.mat-nav-list{\\n  text-align: center;\\n}\\n\\n.mat-sidenav-content{\\n  min-height: 600px;\\n  padding: 0 0 20px 0;\\n}\\n\\n.mat-form-field{\\n  width: 100%;\\n}\\n\\n\"","module.exports = \"\\n<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\" [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"side\\\" [opened]=\\\"false\\\">\\n    <!-- [mode]=\\\"side\\\" (isHandset$ | async) ? 'over' : 'side'-->\\n    <!-- [opened]=!(isHandset$ | async) -->\\n    <mat-toolbar color=\\\"primary\\\">\\n      <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-10\\\">\\n            Filters\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\">\\n              <!-- *ngIf=\\\"isHandset$ | async\\\" -->\\n              <mat-icon aria-label=\\\"Side nav toggle icon\\\">close</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </mat-toolbar>\\n    <mat-nav-list>\\n      <div class=\\\"container\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <mat-form-field>\\n            <input matInput [matDatepicker]=\\\"pickerFrom\\\" [(ngModel)]=\\\"_filterGrid.pickerStartFrom\\\" placeholder=\\\"Choose Date From\\\" required\\n              readonly>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"pickerFrom\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #pickerFrom [startAt]=\\\"pickerStartFrom\\\"></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"col-md-12\\\">\\n          <mat-form-field>\\n            <!-- matDatepicker -->\\n            <input matInput [matDatepicker]=\\\"pickerTo\\\" [(ngModel)]=\\\"_filterGrid.pickerStartTo\\\" placeholder=\\\"Choose Date To\\\" required\\n              readonly>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"pickerTo\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #pickerTo [startAt]=\\\"pickerTo\\\" [startAt]=\\\"pickerStartTo\\\"></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"col-md-12\\\">\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"System code\\\" (selectionChange)=\\\"onSelectionSystemCode($event)\\\" [(ngModel)]=\\\"_filterGrid.systemCodeSelected.key\\\"\\n              name=\\\"systemCode\\\">\\n              <mat-option *ngFor=\\\"let item of systemCode\\\" [value]=\\\"item.id\\\">\\n                {{item.value}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"col-md-12\\\">\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"Status ID\\\" (selectionChange)=\\\"onSelectionStatusId($event)\\\" [(ngModel)]=\\\"_filterGrid.statusIdSelected.key\\\"\\n              name=\\\"statusId\\\">\\n              <mat-option *ngFor=\\\"let item of statusError\\\" [value]=\\\"item.id\\\">\\n                {{item.value}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n\\n        <br>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <!-- <button mat-raised-button (click)=\\\"resetFilter()\\\">reset </button> -->\\n            <a mat-raised-button (click)=\\\"onResetFilter()\\\">RESET</a>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <a mat-raised-button (click)=\\\"onSearch()\\\" (click)=\\\"drawer.toggle()\\\">SEARCH</a>\\n          </div>\\n\\n        </div>\\n      </div>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <div class=\\\"row\\\" style=\\\"width:100%\\\">\\n        <div class=\\\"col-6\\\">\\n          <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\">\\n            <!-- *ngIf=\\\"isHandset$ | async\\\" -->\\n            <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n          </button>\\n          <span> Filter</span>\\n        </div>\\n        <div class=\\\"col-6\\\" style=\\\"text-align: right\\\">\\n            <span>STAGING System v.1.0 </span>\\n        </div>\\n      </div>\\n    </mat-toolbar>\\n    <!-- Add Content Here -->\\n    <!-- <ng-content></ng-content> -->\\n    <app-table-transaction [child-message]=\\\"_filterGrid\\\" [parentSubject]=\\\"parentSubject\\\"></app-table-transaction>\\n    <!-- <app-grid-example></app-grid-example> -->\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component, Input } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { systemCode } from '../../Models/systemCode.interface';\nimport { StagingService } from '../../Service/staging.service';\nimport { statusError } from '../../Models/statusError.interface';\nimport { TableTransactionComponent } from '../transaction-table/transaction-table.component';\nimport { filterGrid } from '../../Models/filterGrid';\n\n@Component({\n  selector: 'app-nav-filter',\n  templateUrl: './transaction-nav.component.html',\n  styleUrls: ['./transaction-nav.component.css']\n})\nexport class GridFilterComponent {\n  tableTransaction: TableTransactionComponent;\n  _filterGrid: filterGrid = new filterGrid();\n  statusError: statusError[];\n  systemCode: systemCode[];\n  parentSubject:Subject<any> = new Subject();\n\n  \n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, private stagingService: StagingService) {\n\n  }\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n\n    this.systemCode = this.stagingService.getSystemCodeList();\n    this.statusError = this.stagingService.getErrorCodeList();\n\n    console.log('​------------------------------------------------------------------------------------------------------');\n    console.log('​GridFilterComponent -> this._filterGrid.statusIdSelected.key ', this._filterGrid.statusIdSelected.key);\n    console.log('​------------------------------------------------------------------------------------------------------');\n    this.resetFilters();\n  }\n\n  private resetFilters(){\n    this._filterGrid.pickerStartFrom = new Date(new Date().getFullYear(), new Date().getMonth() - 1);\n    this._filterGrid.pickerStartTo = new Date();\n    this._filterGrid.statusIdSelected.key = '-1';\n    this._filterGrid.statusIdSelected.value = 'all';\n    this._filterGrid.systemCodeSelected.value = 'all';\n    this._filterGrid.systemCodeSelected.key = '-1';\n  }\n  public onSearch() {\n    \n    console.log('​--------------------------------------------');\n    console.log('​GridFilterComponent -> publiconSearch -> ', 'click');\n    console.log('​--------------------------------------------');\n    this.parentSubject.next('some value');\n  }\n\n  public onResetFilter() {\n    this.resetFilters();\n  }\n\n  public onSelectionSystemCode(event) {\n    console.log('​-----------------------------------------------------------');\n    console.log('​GridFilterComponent -> publiconSelectionSystemCode -> a', event);\n    console.log('​-----------------------------------------------------------');\n    this._filterGrid.systemCodeSelected.key = event.value;\n    this._filterGrid.systemCodeSelected.value = event.source.triggerValue;\n  }\n\n  public onSelectionStatusId(event) {\n    this._filterGrid.statusIdSelected.key = event.value;\n    this._filterGrid.statusIdSelected.value = event.source.triggerValue;\n  }\n  \n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n name: 'infoImage'\r\n})\r\n\r\nexport class infoImagePipe implements PipeTransform {\r\n\r\ntransform(value: string): string {\r\n        return '<div class=\"circleRed\">&nbsp</div>';\r\n   }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n name: 'truncate'\r\n})\r\n\r\nexport class TruncatePipe implements PipeTransform {\r\n\r\ntransform(value: string, args: string[]): string {\r\n    const limit = args.length > 0 ? parseInt(args[0], 10) : 20;\r\n    const trail = args.length > 1 ? args[1] : '...';\r\n    if (value == null) return '-'\r\n    return (value.length > limit) ? value.substring(0, limit) + trail : value;\r\n   }\r\n}","module.exports = \".container {\\r\\nmax-width: 100%;\\r\\n}\\r\\n\\r\\ntable {\\r\\nwidth: 100%;\\r\\n}\\r\\n\\r\\n.mat-elevation-z8{\\r\\nwidth: 100%;\\r\\n}\\r\\n\\r\\ntd.mat-cell{\\r\\npadding: 4px;\\r\\n}\\r\\n\\r\\ntd.mat-cell.cdk-column-statusid.mat-column-statusid.ng-star-inserted{\\r\\ntext-align: center;\\r\\n}\\r\\n\\r\\ntd.mat-cell.cdk-column-messagetypeid.mat-column-messagetypeid.ng-star-inserted{\\r\\ntext-align: center;\\r\\n}\\r\\n\\r\\ntd.mat-cell.cdk-column-systemcode.mat-column-systemcode.ng-star-inserted{\\r\\ntext-align: center;\\r\\n}\\r\\n\\r\\n/* \\r\\ntd.mat-cell.cdk-column-messagetypeid {\\r\\nbackground-color: aquamarine;\\r\\n} */\\r\\n\\r\\nmat-form-field.mat-form-field.ng-tns-c8-11.mat-primary.mat-form-field-type-mat-input.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-hide-placeholder{\\r\\nwidth: 100%;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n\\r\\n}\\r\\n\\r\\n.example-loading-shade {\\r\\nposition: absolute;\\r\\ntop: 0;\\r\\nleft: 0;\\r\\nbottom: 56px;\\r\\nright: 0;\\r\\nbackground: rgba(0, 0, 0, 0.15);\\r\\nz-index: 1;\\r\\ndisplay: flex;\\r\\nalign-items: center;\\r\\njustify-content: center;\\r\\n}\\r\\n\\r\\ntr.mat-row.ng-star-inserted:hover {\\r\\nbackground: #e2e2e2;\\r\\n}\\r\\n\\r\\n.circleRed {\\r\\nmargin: 0 auto;\\r\\nwidth: 20px;\\r\\nheight: 20px;\\r\\nbackground: rgb(221, 22, 22);\\r\\nborder: 1px solid rgb(66, 65, 65);\\r\\nborder-radius: 50%;\\r\\n}\\r\\n\\r\\n.circleOrange {\\r\\nmargin: 0 auto;\\r\\nwidth: 20px;\\r\\nheight: 20px;\\r\\nbackground: rgb(255, 123, 71);\\r\\nborder: 1px solid rgb(66, 65, 65);\\r\\nborder-radius: 50%;\\r\\n}\\r\\n\\r\\n.circleGreen {\\r\\nmargin: 0 auto;\\r\\nwidth: 20px;\\r\\nheight: 20px;\\r\\nbackground: rgb(3, 105, 16);\\r\\nborder: 1px solid rgb(66, 65, 65);\\r\\nborder-radius: 50%;\\r\\n}\\r\\n\\r\\n.container.trasactionFilter{\\r\\npadding-top: 20px;\\r\\n}\\r\\n\\r\\n.mat-form-field.filterSearch{\\r\\nwidth: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"container trasactionFilter\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Date From\\\" [value]=\\\"_parentFilterGrid.pickerStartFrom | date:'dd-MM-yyyy'\\\" readonly>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Date To\\\" [value]=\\\"_parentFilterGrid.pickerStartTo | date:'dd-MM-yyyy'\\\" readonly>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Status ID\\\" [value]=\\\"_parentFilterGrid.statusIdSelected.value\\\" readonly>\\n      </mat-form-field>\\n    </div>\\n    <div class=\\\"col\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"System Code\\\" [value]=\\\"_parentFilterGrid.systemCodeSelected.value\\\" readonly>\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <mat-form-field class=\\\"filterSearch\\\">\\n        <input maxlength=\\\"50\\\" matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter by (system code, Transactionguid, Message)\\\">\\n      </mat-form-field>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <div class=\\\"mat-elevation-z8\\\">\\n        <mat-paginator #paginator [length]=\\\"dataSource.data.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"15\\\" [pageSizeOptions]=\\\"[15, 25, 50, 100, 250]\\\">\\n        </mat-paginator>\\n        <div class=\\\"example-container mat-elevation-z8\\\">\\n\\n\\n          <div class=\\\"example-loading-shade\\\" *ngIf=\\\"isLoadingResults\\\">\\n            <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\n          </div>\\n\\n          <table mat-table #table [trackBy]=\\\"trackByIndex\\\" [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n            <!-- Id Column -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"statusid\\\" class=\\\"cellCenter\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">\\n                <div [class]=\\\"colourCircle[row.statusid]\\\"></div>\\n              </td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"systemcode\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>System Code</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">{{row.systemcode}}</td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"messagetypeid\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Message TypeId</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">{{row.messagetypeid}}</td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"transactionguid\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Transactionguid</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">{{row.transactionguid}}</td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"message\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Message</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\" matTooltip=\\\"{{row.message}}\\\">{{row.message | truncate:[200, '...']}}</td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"insertdate\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Insert Date</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">{{row.insertdate | date:\\\"MM/dd/yyyy hh:mm\\\"}}</td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"lastupdatedate\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Lastupdate Date</th>\\n              <td mat-cell *matCellDef=\\\"let row\\\">{{row.lastupdatedate | date:\\\"MM/dd/yyyy hh:mm\\\"}}</td>\\n            </ng-container>\\n\\n            <!-- INPUT Column -->\\n            <ng-container matColumnDef=\\\"input\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"><a mat-raised-button routerLink=\\\"/input\\\" matTooltip=\\\"Info about the action\\\">input</a></td>\\n            </ng-container>\\n\\n            <!-- OUTPUT Column -->\\n            <ng-container matColumnDef=\\\"output\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\\n              <td mat-cell *matCellDef=\\\"let row\\\"><a mat-raised-button routerLink=\\\"/output\\\">output</a></td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n          </table>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n  </div>\"","import { Component, OnInit, ViewChild, Input, Output } from '@angular/core';\nimport { ITransaction } from '../../Models/transaction.interface';\nimport { MatTableDataSource, MatPaginator, MatSort, MatSnackBar } from '@angular/material';\nimport { StagingService } from '../../Service/staging.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { filterGrid } from '../../Models/filterGrid';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-table-transaction',\n  templateUrl: './transaction-table.component.html',\n  styleUrls: ['./transaction-table.component.css']\n})\nexport class TableTransactionComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @Input('child-message') _parentFilterGrid: filterGrid;\n  \n  _filterGrid: filterGrid = new filterGrid();\n  colourCircle = {'-1': 'circleRed', '1': 'circleOrange', '2': 'circleGreen' };\n  isLoadingResults = false;\n  transacionList: ITransaction[];\n  dataSource: MatTableDataSource<ITransaction>;\n  displayedColumns: string[] = [\n    'statusid',    \n    'id',\n    'systemcode',\n    'messagetypeid',\n    'transactionguid',\n    'message',\n    'insertdate',\n    'lastupdatedate',\n    'input',\n    'output'\n  ];\n  @Input()\n  parentSubject: Subject<any>;\n\n  constructor(private _stagingService: StagingService, public snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.parentSubject.subscribe(event => {\n      // called when the notifyChildren method is\n      // called in the parent component\n      this.getTrasactionList();\n    });\n\n\n    this.getTrasactionList();\n\n    this.dataSource = new MatTableDataSource(this.transacionList);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  private convertDate(inputFormat) {\n    function pad(s) { return (s < 10) ? '0' + s : s; }\n    var d = new Date(inputFormat);\n    return [d.getFullYear(), pad(d.getMonth()+1), pad(d.getDate())].join('-');\n  }\n\n  private getTrasactionList() {\n    this.isLoadingResults = true;\n    let dateFrom = this.convertDate(this._parentFilterGrid.pickerStartFrom);\n    console.log('​----------------------------------------------------------------------------');\n    console.log('​TableTransactionComponent -> privategetTrasactionList -> dateFrom', dateFrom);\n    console.log('​----------------------------------------------------------------------------');\n    let dateTo = this.convertDate(this._parentFilterGrid.pickerStartTo)\n    console.log('​------------------------------------------------------------------------');\n    console.log('​TableTransactionComponent -> privategetTrasactionList -> dateTo', dateTo);\n    console.log('​------------------------------------------------------------------------');\n    let xxxx = this._parentFilterGrid.statusIdSelected.key != -1 ? this._parentFilterGrid.statusIdSelected.key : '';\n    let yyyy = this._parentFilterGrid.systemCodeSelected.key != -1 ? this._parentFilterGrid.systemCodeSelected.key : '';\n\n    this._stagingService.getTrasactionList(dateFrom,dateTo,xxxx,yyyy).subscribe(data => {\n      var obj = JSON.parse(data, function (key, value) {\n        //PARSE HERE SPECIAL DATA\n        if (key == \"message\") {\n          // return new Date(value);\n        } else {\n          //return value;\n        }\n        return value;\n      });\n\n      this.dataSource = new MatTableDataSource(<ITransaction[]>obj);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.isLoadingResults = false;\n    },\n      (err: HttpErrorResponse) => {\n        if (err.error instanceof Error) {\n          this.openSnackBar('Message error', 'ERROR data received form server: ' + err.status);\n        } else {\n          this.openSnackBar('Message error', 'ERROR receiving data form server: ' + err.status);\n        }\n        this.isLoadingResults = false;\n      }\n    );\n  }\n\n  applyFilter(filterValue: string) {\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    this.dataSource.filterPredicate = (data: ITransaction, filter: string) => {\n      return (data.message.trim().toLowerCase().indexOf(filter.trim().toLowerCase()) != -1\n        ||\n        data.transactionguid.trim().toLowerCase().indexOf(filter.trim().toLowerCase()) != -1\n        ||\n        data.systemcode.trim().toLowerCase().indexOf(filter.trim().toLowerCase()) != -1);\n    } \n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 4000,\n    });\n  }\n\n\n  /**\n* Sort the data (client-side). If you're using server-side sorting,\n* this would be replaced by requesting the appropriate data from the server.\n*/\n  private getSortedData(data: ITransaction[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'systemCode': return compare(a.systemcode, b.systemcode, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // needed if child gets re-created (eg on some model changes)\n    // note that subsequent subscriptions on the same subject will fail\n    // so the parent has to re-create parentSubject on changes\n    this.parentSubject.unsubscribe();\n  }\n}\n\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n\n// let transaction: ITransaction = {\n//   id: null,\n//   systemcode: null,\n//   messagetypeid: null,\n//   transactionguid: null,\n//   message: null,\n//   statusid: null,\n//   insertdate: null,\n//   lastupdatedate: null,\n// }\n\n// this.transacionList.push(transaction);\n\n// // console.log('​--------------------------------------------------');\n// // console.log('​TableTransactionComponent -> ngOnInit -> key', key);\n// // console.log('​--------------------------------------------------');\n\n// return value;","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { ContextInfo } from '../service/context-info';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { Context } from \"../service/context.service\";\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { take, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class Interceptor implements HttpInterceptor {\r\n  constructor(private context: Context) { \r\n      context.autoConfigure();\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return this.context.all$.pipe(take(10)).pipe(mergeMap(ctx => {\r\n    console.log('TCL: ----------------------------');\r\n    console.log('TCL: Interceptor -> ctx', ctx);\r\n    console.log('TCL: ----------------------------');\r\n                 \r\n        const newReq = req.clone({\r\n          setHeaders: {\r\n            ModuleId: this.context._moduleId.toString(),\r\n            TabId: ctx.tabId.toString(),\r\n            RequestVerificationToken: ctx.antiForgeryToken,\r\n            'X-Debugging-Hint': 'bootstrapped by bbAngular and 2SXC',\r\n          }\r\n        });\r\n\r\n        return next.handle(newReq);\r\n      }));\r\n  }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","import { ContextInfo } from './context-info';\r\nimport { DevContext as DevContext } from './dev-context';\r\nimport { ElementRef, Injectable, Optional } from '@angular/core';\r\nimport { Observable, combineLatest, from, timer } from 'rxjs';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\ndeclare const window: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class Context {\r\n    // todo: probably should set the replay-buffer to 1 for all the following, but must test!\r\n    private tidSubject = new ReplaySubject<number>(1);\r\n    private cbIdSubject = new ReplaySubject<number>(1);\r\n    private afTokenSubject = new ReplaySubject<string>(1);\r\n    private _properties: any = {};\r\n    _moduleId: string = \"\";\r\n    tabId$ = this.tidSubject.asObservable();\r\n    antiForgeryToken$ = this.afTokenSubject.asObservable();\r\n\r\n    all$ = combineLatest(\r\n        this.tabId$,                // wait for tabId\r\n        this.antiForgeryToken$)     // wait for security token\r\n        .pipe(map(res => <ContextInfo>{  // then merge streams\r\n            tabId: res[0],\r\n            antiForgeryToken: res[1]\r\n        }));\r\n\r\n    constructor(\r\n        @Optional() private devSettings: DevContext  \r\n    ) {\r\n\r\n        // Dev settings with minimal ignore settings.\r\n        this.devSettings = Object.assign({}, {\r\n            ignoreMissing$2sxc: false,\r\n            ignoreMissingServicesFramework: false\r\n        }, devSettings);\r\n\r\n        const MODULE = 'AngularNGMD';\r\n        if (window && window[MODULE]) {\r\n            this._properties = window[MODULE];\r\n            console.log('​-----------------------------------------------------------------------');\r\n            console.log('​DnnContextService -> constructor -> this._properties', this._properties);\r\n            console.log('​-----------------------------------------------------------------------');\r\n        } else {\r\n            console.log('----------------------');\r\n            console.log('ERROR: Missing window[MODULE] for DNN');\r\n            console.log('----------------------');\r\n        }        \r\n    }\r\n\r\n    autoConfigure() {\r\n        this._moduleId = this._properties.ModuleId;\r\n        // Check if DNN Services framework exists.\r\n        if (window.$ && window.$.ServicesFramework) {\r\n        console.log('TCL: ----------------------------------------------------------------------------');\r\n        console.log('TCL: autoConfigure -> window.$.ServicesFramework', window.$.ServicesFramework);\r\n        console.log('TCL: ----------------------------------------------------------------------------');\r\n \r\n            // Run timer till sf is ready, but max for a second.\r\n            const t = timer(0, 100)\r\n                .pipe(take(10))\r\n                .subscribe(x => {\r\n\r\n                    // This must be accessed after a delay, as the SF is not ready yet.\r\n                    const sf = window.$.ServicesFramework();\r\n                    console.log('TCL: ----------------------------');\r\n                    console.log('TCL: autoConfigure -> sf', sf);\r\n                    console.log('TCL: ----------------------------');\r\n\r\n                    // Check if sf is initialized.\r\n                    if (sf.getAntiForgeryValue() && sf.getTabId() !== -1) {\r\n                        t.unsubscribe();\r\n                        console.log('TCL: ----------------------------');\r\n                        console.log('TCLqqqqqqqqqqqqqqqqqqqqqq: autoConfigure -> sf', window.$.ServicesFramework().getTabId());\r\n                        console.log('TCL: ----------------------------');\r\n\r\n                        this.tidSubject.next(sf.getTabId());\r\n                        this.afTokenSubject.next(sf.getAntiForgeryValue());\r\n                    } else {\r\n                        console.log('TCL: ----------------------------');\r\n                        console.log('RESET', sf);\r\n                        console.log('TCL: ----------------------------');\r\n                        // Must reset, as they are incorrectly initialized when accessed early.\r\n                        if (window.dnn && window.dnn.vars && window.dnn.vars.length === 0) {\r\n                            window.dnn.vars = null;\r\n                        }\r\n                    }\r\n                });\r\n            return;\r\n        }\r\n\r\n        if (!this.devSettings.ignoreMissingServicesFramework) {\r\n            throw new Error(`\r\n                DNN Services Framework is missing, and it\\'s not allowed according to devSettings.\r\n                Either set devSettings to ignore this, or ensure it\\'s there`);\r\n        }\r\n\r\n        this.tidSubject.next(this.devSettings.tabId);\r\n        this.afTokenSubject.next(this.devSettings.antiForgeryToken);\r\n    }\r\n}","// This lets you configure test-values during development.\r\nimport { ContextInfo } from './context-info';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DevContext implements ContextInfo {\r\n    ignoreMissing$2sxc = false;\r\n    ignoreMissingServicesFramework = false;\r\n    forceUse: boolean = false;\r\n\r\n    moduleId: number = 0;\r\n    tabId: number = 0;\r\n\r\n    contentBlockId: number;\r\n    antiForgeryToken: 'ThisIsaTestAntiForgeryToken';\r\n    sxc: null;\r\n    path: string = '/';\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, combineLatest, from, timer } from 'rxjs';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n\r\ndeclare const window: any;\r\n\r\n@Injectable()\r\nexport class DnnContextService {\r\n\r\n    // https://medium.com/@ryanchenkie_40935/angular-authentication-using-the-http-client-and-http-interceptors-2f9d1540eb8\r\n\r\n    private _moduleId = -1;\r\n    private _tabId = -1;\r\n    private _antiForgeryToken = '';\r\n    private _properties: any = {};\r\n\r\n    constructor() {\r\n\r\n        const MODULE = 'AngularNGMD';\r\n        if (window && window[MODULE]) {\r\n            this._properties = window[MODULE];\r\n            console.log('​-----------------------------------------------------------------------');\r\n            console.log('​DnnContextService -> constructor -> this._properties', this._properties);\r\n            console.log('​-----------------------------------------------------------------------');\r\n        } else {\r\n            console.log('----------------------');\r\n            console.log('ERROR: Missing window[MODULE] for DNN');\r\n            console.log('----------------------');\r\n        }\r\n\r\n    }\r\n\r\n    getServiceFramework() {\r\n\r\n        this._moduleId = this._properties.ModuleId;\r\n        // this._properties.UserID;\r\n        console.log('​---------------------------------------------------------------------------------------------');\r\n        console.log('​DnnContextService -> getServiceFramework -> this._properties.UserID', this._properties.UserId);\r\n        console.log('​---------------------------------------------------------------------------------------------');\r\n        console.log('​---------------------------------------------------------------------------');\r\n\r\n        if (this._antiForgeryToken !== '') {\r\n            console.log('​-----------------------------------------------');\r\n            console.log('​DnnContextService -> getServiceFramework -> ', 'FALL 00');\r\n            console.log('​-----------------------------------------------');\r\n            return this.context;\r\n        } else {\r\n\r\n            // Check if DNN Services framework exists.\r\n            if (window.$ && window.$.ServicesFramework) {\r\n                const sf = window.$.ServicesFramework();\r\n                // Check if sf is initialized.\r\n                console.log('​---------------------------------------------------------------------------------------------------------------------------------------------------');\r\n                console.log('​DnnContextService -> getServiceFramework -> window.$.ServicesFramework().getAntiForgeryValue()', window.$.ServicesFramework().getAntiForgeryValue());\r\n                console.log('​---------------------------------------------------------------------------------------------------------------------------------------------------');\r\n\r\n                // const t = timer(0, 100)\r\n                //     .pipe(take(10))\r\n                //     .subscribe(x => {\r\n                //         console.log('​-----------------------------------------------');\r\n                //         console.log('​DnnContextService -> getServiceFramework -> ', 'TIMER START');\r\n                //         console.log('​-----------------------------------------------');\r\n                //         // Check if sf is initialized.\r\n                //         if (sf.getAntiForgeryValue() && sf.getTabId() !== -1) {\r\n\r\n                //             this._tabId = sf.getTabId();\r\n                //             this._antiForgeryToken = sf.getAntiForgeryValue();\r\n                //             console.log('​-----------------------------------------------');\r\n                //             console.log('​DnnContextService -> getServiceFramework -> TROVATO ->', this._antiForgeryToken);\r\n                //             console.log('​-----------------------------------------------');        \r\n                //             t.unsubscribe();\r\n                //             return this.context;                            \r\n\r\n                //         } else {\r\n                //             console.log('​-----------------------------------------------');\r\n                //             console.log('​DnnContextService -> getServiceFramework -> ', 'MISSING');\r\n                //             console.log('​-----------------------------------------------');\r\n\r\n                //         }\r\n                //     });\r\n                if (sf.getAntiForgeryValue() && sf.getTabId() !== -1) {\r\n                    this._tabId = sf.getTabId();\r\n                    this._antiForgeryToken = sf.getAntiForgeryValue();\r\n\r\n                    console.log('​-----------------------------------------------');\r\n                    console.log('​DnnContextService -> getServiceFramework -> RETURN: this.context', this.context);\r\n                    console.log('​-----------------------------------------------');\r\n                    return this.context;\r\n                } else {\r\n\r\n                    console.log('​-----------------------------------------------');\r\n                    console.log('​DnnContextService -> getServiceFramework -> ', 'FALL 01');\r\n                    console.log('​-----------------------------------------------');\r\n                    return null;\r\n                }\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    get context() {\r\n        return { 'tabId': this._tabId, 'antiForgeryToken': this._antiForgeryToken, 'moduleId': this._moduleId };\r\n    }\r\n\r\n    get properties() {\r\n        return this._properties;\r\n    }\r\n\r\n    get resources() {\r\n        console.log('TCL: ------------------------------------------------------------------------------------------------');\r\n        console.log('TCL: DnnContextService -> getresources -> this._properties.Resources', this._properties.Resources);\r\n        console.log('TCL: ------------------------------------------------------------------------------------------------');\r\n\r\n        return this._properties.Resources;\r\n    }\r\n}\r\n"],"sourceRoot":""}